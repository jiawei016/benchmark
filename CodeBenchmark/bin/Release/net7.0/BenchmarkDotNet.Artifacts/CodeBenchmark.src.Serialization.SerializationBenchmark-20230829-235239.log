// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110
// command took 2.27 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110
// command took 4.31 sec and exited with 0
// ***** Done, took 00:00:06 (6.79 sec)   *****
// Found 6 benchmarks:
//   SerializationBenchmark.JsonToJObjectTest: DefaultJob [N=100]
//   SerializationBenchmark.JsonToObjectTest: DefaultJob [N=100]
//   SerializationBenchmark.XmlToObjectTest: DefaultJob [N=100]
//   SerializationBenchmark.XmlPrepTimeIncludedTest: DefaultJob [N=100]
//   SerializationBenchmark.XmlPrepTimeExcludedTest: DefaultJob [N=100]
//   SerializationBenchmark.ProtoBufToObjectTest: DefaultJob [N=100]

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: SerializationBenchmark.JsonToJObjectTest: DefaultJob [N=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82fc298a-a926-4b11-accc-7b0673dfd110.dll --anonymousPipes 1300 1444 --benchmarkName "CodeBenchmark.src.Serialization.SerializationBenchmark.JsonToJObjectTest(N: 100)" --job Default --benchmarkId 0 in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.7
// Runtime=.NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0\Serialization\info.json'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at CodeBenchmark.src.Serialization.SerializationBenchmark.prepareDataFiles() in D:\Storage\Project\benchmark\CodeBenchmark\src\Serialization\SerializationBenchmark.cs:line 105
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 176
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 25052 has exited with code -1.

// ** Remained 5 (83.3%) benchmark(s) to run. Estimated finish 2023-08-29 23:52 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: SerializationBenchmark.JsonToObjectTest: DefaultJob [N=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82fc298a-a926-4b11-accc-7b0673dfd110.dll --anonymousPipes 1292 1444 --benchmarkName "CodeBenchmark.src.Serialization.SerializationBenchmark.JsonToObjectTest(N: 100)" --job Default --benchmarkId 1 in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.7
// Runtime=.NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0\Serialization\info.json'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at CodeBenchmark.src.Serialization.SerializationBenchmark.prepareDataFiles() in D:\Storage\Project\benchmark\CodeBenchmark\src\Serialization\SerializationBenchmark.cs:line 105
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 368
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 14776 has exited with code -1.

// ** Remained 4 (66.7%) benchmark(s) to run. Estimated finish 2023-08-29 23:52 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: SerializationBenchmark.XmlToObjectTest: DefaultJob [N=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82fc298a-a926-4b11-accc-7b0673dfd110.dll --anonymousPipes 1344 1432 --benchmarkName "CodeBenchmark.src.Serialization.SerializationBenchmark.XmlToObjectTest(N: 100)" --job Default --benchmarkId 2 in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.7
// Runtime=.NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0\Serialization\info.json'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at CodeBenchmark.src.Serialization.SerializationBenchmark.prepareDataFiles() in D:\Storage\Project\benchmark\CodeBenchmark\src\Serialization\SerializationBenchmark.cs:line 105
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 560
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 27616 has exited with code -1.

// ** Remained 3 (50.0%) benchmark(s) to run. Estimated finish 2023-08-29 23:52 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: SerializationBenchmark.XmlPrepTimeIncludedTest: DefaultJob [N=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82fc298a-a926-4b11-accc-7b0673dfd110.dll --anonymousPipes 1440 1436 --benchmarkName "CodeBenchmark.src.Serialization.SerializationBenchmark.XmlPrepTimeIncludedTest(N: 100)" --job Default --benchmarkId 3 in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.7
// Runtime=.NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0\Serialization\info.json'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at CodeBenchmark.src.Serialization.SerializationBenchmark.prepareDataFiles() in D:\Storage\Project\benchmark\CodeBenchmark\src\Serialization\SerializationBenchmark.cs:line 105
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_3.Run(IHost host, String benchmarkName) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 752
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 23396 has exited with code -1.

// ** Remained 2 (33.3%) benchmark(s) to run. Estimated finish 2023-08-29 23:52 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: SerializationBenchmark.XmlPrepTimeExcludedTest: DefaultJob [N=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82fc298a-a926-4b11-accc-7b0673dfd110.dll --anonymousPipes 1300 1504 --benchmarkName "CodeBenchmark.src.Serialization.SerializationBenchmark.XmlPrepTimeExcludedTest(N: 100)" --job Default --benchmarkId 4 in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.7
// Runtime=.NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0\Serialization\info.json'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at CodeBenchmark.src.Serialization.SerializationBenchmark.prepareDataFiles() in D:\Storage\Project\benchmark\CodeBenchmark\src\Serialization\SerializationBenchmark.cs:line 105
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_4.Run(IHost host, String benchmarkName) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 944
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 24652 has exited with code -1.

// ** Remained 1 (16.7%) benchmark(s) to run. Estimated finish 2023-08-29 23:52 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: SerializationBenchmark.ProtoBufToObjectTest: DefaultJob [N=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82fc298a-a926-4b11-accc-7b0673dfd110.dll --anonymousPipes 1564 1308 --benchmarkName "CodeBenchmark.src.Serialization.SerializationBenchmark.ProtoBufToObjectTest(N: 100)" --job Default --benchmarkId 5 in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.7
// Runtime=.NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob


System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\bin\Release\net7.0\Serialization\info.json'.
   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at CodeBenchmark.src.Serialization.SerializationBenchmark.prepareDataFiles() in D:\Storage\Project\benchmark\CodeBenchmark\src\Serialization\SerializationBenchmark.cs:line 105
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_5.Run(IHost host, String benchmarkName) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 1136
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Storage\Project\benchmark\CodeBenchmark\bin\Release\net7.0\82fc298a-a926-4b11-accc-7b0673dfd110\82fc298a-a926-4b11-accc-7b0673dfd110.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 26708 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2023-08-29 23:52 (0h 0m from now) **
Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\CodeBenchmark.src.Serialization.SerializationBenchmark-report.csv
  BenchmarkDotNet.Artifacts\results\CodeBenchmark.src.Serialization.SerializationBenchmark-report-github.md
  BenchmarkDotNet.Artifacts\results\CodeBenchmark.src.Serialization.SerializationBenchmark-report.html

// * Detailed results *
SerializationBenchmark.JsonToJObjectTest: DefaultJob [N=100]
Runtime = .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

SerializationBenchmark.JsonToObjectTest: DefaultJob [N=100]
Runtime = .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

SerializationBenchmark.XmlToObjectTest: DefaultJob [N=100]
Runtime = .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

SerializationBenchmark.XmlPrepTimeIncludedTest: DefaultJob [N=100]
Runtime = .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

SerializationBenchmark.XmlPrepTimeExcludedTest: DefaultJob [N=100]
Runtime = .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

SerializationBenchmark.ProtoBufToObjectTest: DefaultJob [N=100]
Runtime = .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet v0.13.7, Windows 10 (10.0.19045.3324/22H2/2022Update)
Intel Core i7-7700HQ CPU 2.80GHz (Kaby Lake), 1 CPU, 8 logical and 4 physical cores
.NET SDK 7.0.400
  [Host]     : .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2
  DefaultJob : .NET 7.0.10 (7.0.1023.36312), X64 RyuJIT AVX2


|                  Method |   N | Mean | Error | Ratio | RatioSD | Alloc Ratio |
|------------------------ |---- |-----:|------:|------:|--------:|------------:|
|       JsonToJObjectTest | 100 |   NA |    NA |     ? |       ? |           ? |
|        JsonToObjectTest | 100 |   NA |    NA |     ? |       ? |           ? |
|         XmlToObjectTest | 100 |   NA |    NA |     ? |       ? |           ? |
| XmlPrepTimeIncludedTest | 100 |   NA |    NA |     ? |       ? |           ? |
| XmlPrepTimeExcludedTest | 100 |   NA |    NA |     ? |       ? |           ? |
|    ProtoBufToObjectTest | 100 |   NA |    NA |     ? |       ? |           ? |

Benchmarks with issues:
  SerializationBenchmark.JsonToJObjectTest: DefaultJob [N=100]
  SerializationBenchmark.JsonToObjectTest: DefaultJob [N=100]
  SerializationBenchmark.XmlToObjectTest: DefaultJob [N=100]
  SerializationBenchmark.XmlPrepTimeIncludedTest: DefaultJob [N=100]
  SerializationBenchmark.XmlPrepTimeExcludedTest: DefaultJob [N=100]
  SerializationBenchmark.ProtoBufToObjectTest: DefaultJob [N=100]

// * Warnings *
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.

BaselineCustomAnalyzer
  Summary -> A question mark '?' symbol indicates that it was not possible to compute the (Ratio, RatioSD, Alloc Ratio) column(s) because the baseline value is too close to zero.

// * Legends *
  N           : Value of the 'N' parameter
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ns        : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:02 (2.16 sec), executed benchmarks: 6

Global total time: 00:00:09 (9.74 sec), executed benchmarks: 6
// * Artifacts cleanup *
Artifacts cleanup is finished
